"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[6922],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(h,l(l({ref:t},c),{},{components:n})):r.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},873:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return s}});var r=n(3117),a=(n(7294),n(3905));const i={},l=void 0,o={unversionedId:"k8s/Creating Your Own Helm Charts",id:"k8s/Creating Your Own Helm Charts",title:"Creating Your Own Helm Charts",description:"[!Warning]",source:"@site/docs/k8s/16-Creating Your Own Helm Charts.md",sourceDirName:"k8s",slug:"/k8s/Creating Your Own Helm Charts",permalink:"/k8s/Creating Your Own Helm Charts",draft:!1,editUrl:"https://github.dev/hamelsmu/notes/blob/master/docs/k8s/16-Creating Your Own Helm Charts.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Helm",permalink:"/k8s/Helm"},next:{title:"Upgrading",permalink:"/k8s/Helm Upgrade & Rollbacks"}},p={},s=[{value:"Validate with <code>helm lint</code>",id:"validate-with-helm-lint",level:2},{value:"Install",id:"install",level:2}],c={toc:s};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"[!Warning]","\nThis is going to be really light, as we don't want to get too deep into this.  You can really just skip this if you like. ")),(0,a.kt)("p",null,"You can reference a directory, vs a zip archive when developing locally. "),(0,a.kt)("h1",{id:"setup-directory-w-helm-create"},"Setup Directory w/ ",(0,a.kt)("inlineCode",{parentName:"h1"},"helm create")),(0,a.kt)("p",null,"You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"helm create")," to generate boilerplate directory structure:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(5010).Z,width:"629",height:"496"})),(0,a.kt)("p",null,"YAML is templated like this: "),(0,a.kt)("p",null,"Note the handy ",(0,a.kt)("inlineCode",{parentName:"p"},"quote")," function for applying quotes!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Release.Name }}\n  labels:\n    kiamol: {{ .Values.kiamolChapter }}\nspec:\n  selector:\n    matchLabels:\n      app: web-ping\n      instance: {{ .Release.Name }}\n  template:\n    metadata:\n      labels:\n        app: web-ping\n        instance: {{ .Release.Name }}\n    spec:\n      containers:\n        - name: app\n          image: kiamol/ch10-web-ping\n          env:\n            - name: TARGET\n              value: {{ .Values.targetUrl }}\n            - name: METHOD\n              value: {{ .Values.httpMethod }}\n            - name: INTERVAL\n              value: {{ .Values.pingIntervalMilliseconds | quote }}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"values.yaml")," looks like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# port for the Service to listen on\nservicePort: 8090\n# number of replicas for the web Pod\nreplicaCount: 2\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Chart.yaml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v2\nname: vweb\ndescription: Simple versioned web app\ntype: application\nversion: 1.0.0\nappVersion: 1.0.0\n\n")),(0,a.kt)("h1",{id:"running-charts"},"Running charts"),(0,a.kt)("h2",{id:"validate-with-helm-lint"},"Validate with ",(0,a.kt)("inlineCode",{parentName:"h2"},"helm lint")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"helm lint directory/")),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"helm install directory/\n")),(0,a.kt)("h1",{id:"distributing-charts"},"Distributing Charts"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://kiamol.net/index.yaml"},"https://kiamol.net/index.yaml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'apiVersion: v1\nentries:\n  vweb:\n  - apiVersion: v2\n    appVersion: 2.0.0\n    created: "2020-06-10T10:42:32.3790003+01:00"\n    description: Simple versioned web app\n    digest: 16b2d1059639208d64fa0c6d9d7aeb825021f7fe25034760a70d33afda51a8cb\n    name: vweb\n    type: application\n    urls:\n    - https://github.com/sixeyed/kiamol/releases/download/v2.0.0/vweb-2.0.0.tgz\n    version: 2.0.0\n  - apiVersion: v2\n    appVersion: 1.0.0\n    created: "2020-06-10T10:42:32.3790003+01:00"\n    description: Simple versioned web app\n    digest: 182061847198468c8ee55e56104d8eaa2b1662e10846aed7134930ef6e03f95b\n    name: vweb\n    type: application\n    urls:\n    - https://github.com/sixeyed/kiamol/files/4757269/vweb-1.0.0.tar.gz\n    version: 1.0.0\ngenerated: "2020-06-10T10:01:44.600496+01:00"\n')),(0,a.kt)("p",null,"Charts need to be packaged before they can be published to a repository, and publishing is usually a three-stage process: package the chart into a zip archive, upload the archive to a server, and update the repository index to add the new chart."),(0,a.kt)("p",null,"There is software called ChartMueseum that will help you package things.  "),(0,a.kt)("p",null,"Lookup how to host helm charts on GitHub if interested."))}u.isMDXComponent=!0},5010:function(e,t,n){t.Z=n.p+"assets/images/20221213105720-6de5049ad2cd8bbf71a18a131e80da5a.png"}}]);