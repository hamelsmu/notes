"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2327],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"Probes",description:"Understand readiness and liveness probes, and how that iteracts with Helm to protect you against deploying bugs."},s=void 0,i={unversionedId:"k8s/health-checks",id:"k8s/health-checks",title:"Probes",description:"Understand readiness and liveness probes, and how that iteracts with Helm to protect you against deploying bugs.",source:"@site/docs/k8s/20-health-checks.md",sourceDirName:"k8s",slug:"/k8s/health-checks",permalink:"/k8s/health-checks",draft:!1,editUrl:"https://github.dev/hamelsmu/notes/blob/master/docs/k8s/20-health-checks.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Probes",description:"Understand readiness and liveness probes, and how that iteracts with Helm to protect you against deploying bugs."},sidebar:"tutorialSidebar",previous:{title:"Pod restart vs. replacement",permalink:"/k8s/Pod-Lifecycle"},next:{title:"DBs on K8s",permalink:"/k8s/DBs on K8s"}},l={},c=[{value:"Testing Liveness Probe",id:"testing-liveness-probe",level:2},{value:"Forcing a container to exit",id:"forcing-a-container-to-exit",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is ",(0,o.kt)("a",{parentName:"p",href:"https://livebook.manning.com/book/learn-kubernetes-in-a-month-of-lunches/chapter-12"},"Chapter 12"),"."),(0,o.kt)("h2",{id:"testing-liveness-probe"},"Testing Liveness Probe"),(0,o.kt)("p",null,"This is a clever way of testing the livenessProbe:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  containers:\n  - name: liveness\n    image: repo/name\n    args:\n    - /bin/sh\n    - -c\n    - touch /tmp/healthy; sleep 30; rm -f /tmp/healthy; sleep 600\n    livenessProbe:\n      exec:\n        command:\n        - cat\n        - /tmp/healthy\n      initialDelaySeconds: 5\n      periodSeconds: 5\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command"},"Source")),(0,o.kt)("p",null,"Failed liveness checks will cause a pod to restart, not to be replaced."),(0,o.kt)("h2",{id:"forcing-a-container-to-exit"},"Forcing a container to exit"),(0,o.kt)("p",null,"You can force a container to exit with the following command.  This might be useful for testing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kl exec -it {pod name} -- killall5\n")),(0,o.kt)("p",null,"This will cause the pod to restart the container, not replace it."))}u.isMDXComponent=!0}}]);