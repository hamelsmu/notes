"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5037],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),d=l,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var s=a.length,r=new Array(s);r[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var c=2;c<s;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1300:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(7462),l=(a(7294),a(3905));const s={title:"Developer tips"},r=void 0,o={unversionedId:"k8s/Developer",id:"k8s/Developer",title:"Developer tips",description:"These notes provide tips on the developer workflow while using K8s.  Some people use Docker compose to work with things locally, however you can also run a Kubernetes cluster locally.",source:"@site/docs/k8s/18-Developer.md",sourceDirName:"k8s",slug:"/k8s/Developer",permalink:"/k8s/Developer",draft:!1,editUrl:"https://github.dev/hamelsmu/notes/blob/master/docs/k8s/18-Developer.md",tags:[],version:"current",sidebarPosition:18,frontMatter:{title:"Developer tips"},sidebar:"tutorialSidebar",previous:{title:"Helm Upgrades & Rollbacks",permalink:"/k8s/Helm Upgrade & Rollbacks"},next:{title:"DBs on K8s",permalink:"/k8s/DBs on K8s"}},i={},c=[{value:"Use the <code>IfNotPresent</code> imagePullPolicy",id:"use-the-ifnotpresent-imagepullpolicy",level:2},{value:"Use namespaces",id:"use-namespaces",level:2},{value:"Setting the namespace in YAML",id:"setting-the-namespace-in-yaml",level:3},{value:"See resources in all namespaces with <code>--all namespaces</code>",id:"see-resources-in-all-namespaces-with---all-namespaces",level:3},{value:"Deleting namespace deletes all resources",id:"deleting-namespace-deletes-all-resources",level:3},{value:"Change the default namespace",id:"change-the-default-namespace",level:2},{value:"Switching Between Clusters",id:"switching-between-clusters",level:2},{value:"Reset the default namespace",id:"reset-the-default-namespace",level:3},{value:"Private Images",id:"private-images",level:2},{value:"Local Setup",id:"local-setup",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"These notes provide tips on the developer workflow while using K8s.  Some people use Docker compose to work with things locally, however you can also run a Kubernetes cluster locally."),(0,l.kt)("h2",{id:"use-the-ifnotpresent-imagepullpolicy"},"Use the ",(0,l.kt)("inlineCode",{parentName:"h2"},"IfNotPresent")," imagePullPolicy"),(0,l.kt)("p",null,"K8s have tricky rules for which container images are used (local vs from repo).  "),(0,l.kt)("p",null,"If the image doesn't have an explict tag in the name (and therefore uses the implicit ",(0,l.kt)("inlineCode",{parentName:"p"},":latest")," tag), then K8s will always pull the image first. Otherwise, K8s will use the local image if it exists in the image cache on the node."),(0,l.kt)("p",null,"You can override this behavior by specifying an ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy"},"image pull policy"),".  ",(0,l.kt)("strong",{parentName:"p"},"When developing locally, you want to use the ",(0,l.kt)("inlineCode",{parentName:"strong"},"IfNotPresent")," policy"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:                         # This is the Pod spec within the Deployment.\n containers:\n   - name: bulletin-board\n     image: kiamol/ch11-bulletin-board:dev \n     imagePullPolicy: IfNotPresent   # Prefer the local image if it exists\n")),(0,l.kt)("p",null,"If you forget to do this, it can be very confusing as to why your image doesn't seem to be updated!"),(0,l.kt)("h2",{id:"use-namespaces"},"Use namespaces"),(0,l.kt)("p",null,"You can use namespaces to test apps on the cluster.  For example, a production and a test namespace."),(0,l.kt)("p",null,"Deploy with a namespace using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--namespace")," flag:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# create a new namespace:\nkubectl create namespace kiamol-ch11-test\n\n# deploy a sleep Pod in the new namespace:\nkubectl apply -f sleep.yaml --namespace kiamol-ch11-test\n\n# list sleep Pods--this won\u2019t return anything:\nkubectl get pods -l app=sleep\n\n# now list the Pods in the namespace:\nkubectl get pods -l app=sleep -n kiamol-ch11-test\n")),(0,l.kt)("p",null,"Objects within a namespace are isolated, so you can deploy the same apps with the same object names in different namespaces.  "),(0,l.kt)("h3",{id:"setting-the-namespace-in-yaml"},"Setting the namespace in YAML"),(0,l.kt)("p",null,"First create the namespace and then assign the deployment to a namespace."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Namespace      # Namespace specs need only a name.\nmetadata:\n name: kiamol-ch11-uat\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:                       # The target namespace is part of the \n name: sleep                   # object metadata. The namespace needs\n namespace: kiamol-ch11-uat    # to exist, or the deployment fails.    \n\n  # The Pod spec follows.\n")),(0,l.kt)("h3",{id:"see-resources-in-all-namespaces-with---all-namespaces"},"See resources in all namespaces with ",(0,l.kt)("inlineCode",{parentName:"h3"},"--all namespaces")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# create the namespace and Deployment:\nkubectl apply -f sleep-uat.yaml\n\n# list the sleep Deployments in all namespaces:\nkubectl get deploy -l app=sleep --all-namespaces\n\n# delete the new UAT namespace:\nkubectl delete namespace kiamol-ch11-uat\n\n# list Deployments again:\nkubectl get deploy -l app=sleep --all-namespaces\n")),(0,l.kt)("h3",{id:"deleting-namespace-deletes-all-resources"},"Deleting namespace deletes all resources"),(0,l.kt)("p",null,"When you delete everything in a namespace, like with the above example, you also delete all the resources in the namespace."),(0,l.kt)("p",null,"Often people will delete a namespace and re-create it, this will delete everything in the namespace.  For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kl delete namespace {namespace}\nkubectl create namespace {namespace}\n")),(0,l.kt)("h2",{id:"change-the-default-namespace"},"Change the default namespace"),(0,l.kt)("p",null,"Constantly passing the ",(0,l.kt)("inlineCode",{parentName:"p"},"--namespace")," flag is tedious.  You can set the default namespace with ",(0,l.kt)("inlineCode",{parentName:"p"},"kl config set-context"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# list all contexts:\nkubectl config get-contexts\n\n# update the default namespace for the current context:\nkubectl config set-context --current --namespace=kiamol-ch11-test\n\n# list the Pods in the default namespace:\nkubectl get pods\n")),(0,l.kt)("p",null,"You can also get the current context with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kl config current-context\n")),(0,l.kt)("h2",{id:"switching-between-clusters"},"Switching Between Clusters"),(0,l.kt)("p",null,"Use contexts to switch b/w clusters.  Config files with contexts live at ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.kube"),"."),(0,l.kt)("h3",{id:"reset-the-default-namespace"},"Reset the default namespace"),(0,l.kt)("p",null,"Below shows you how to reset the default namespace.  You can also set another context to a different namespace."),(0,l.kt)("p",null,"It's always a good idea to check your config as well."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# setting the namespace to blank resets the default:\nkubectl config set-context --current --namespace=\n\n# printing out the config file shows your cluster connection:\nkubectl config view\n")),(0,l.kt)("p",null,"What does Michal do to ",(0,l.kt)("a",{parentName:"p",href:"https://discord.com/channels/1043031122721914940/1045846418331537459/1052831632798777364"},"manage different clusters"),"?"),(0,l.kt)("h2",{id:"private-images"},"Private Images"),(0,l.kt)("p",null,"Kubernetes supports pulling private images by storing registry credentials in a special type of Secret object named ",(0,l.kt)("inlineCode",{parentName:"p"},"docker-registry"),". "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"}," % kl create secret --help                                                                             \nCreate a secret using specified subcommand.\n\nAvailable Commands:\n  docker-registry   Create a secret for use with a Docker registry\n  generic           Create a secret from a local file, directory, or literal value\n  tls               Create a TLS secret\n")),(0,l.kt)("p",null,"You can set the secret like this, where we create a ",(0,l.kt)("inlineCode",{parentName:"p"},"docker-registry")," secret called ",(0,l.kt)("inlineCode",{parentName:"p"},"registry-creds")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# create the Secret using the details from the script:\nkubectl create secret docker-registry registry-creds \n   --docker-server=$REGISTRY_SERVER\n   --docker-username=$REGISTRY_USER\n   --docker-password=$REGISTRY_PASSWORD\n\n# show the Secret details:\nkubectl get secret registry-creds\n")),(0,l.kt)("p",null,"This docker secret is mounted into the container like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="bb-deployment.yaml"',title:'"bb-deployment.yaml"'},"    spec:\n      containers:\n        - name: bulletin-board\n          image: {{ .Values.registryServer }}/{{ .Values.registryUser }}/bulletin-board:{{ .Values.imageBuildNumber }}-kiamol \n          imagePullPolicy: Always    \n          ports:\n            - name: http\n              containerPort: 8080  \n      imagePullSecrets:\n      - name: {{ .Values.registrySecretName }}\n")),(0,l.kt)("p",null,"Where the Helm values are configured like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="values.yaml"',title:'"values.yaml"'},"# port for the Service to listen on\nservicePort: 8012\n# type of the Service:\nserviceType: LoadBalancer\n# domain of the registry server - e.g docker.io for Docker Hub\nregistryServer: docker.io\n# user portion of the image repostory:\nregistryUser: kiamol\n# build number portion of the image tag:\nimageBuildNumber: dev\n# name of the Secret containing registry credentials:\nregistrySecretName: registry-creds\n")),(0,l.kt)("h2",{id:"local-setup"},"Local Setup"),(0,l.kt)("p",null,"Try to encapsulate the CI process into a script that you run locally, that also includes a local version of K8s if possible, where you:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Build container images"),(0,l.kt)("li",{parentName:"ol"},"Spin everything up in a local K8s cluster"),(0,l.kt)("li",{parentName:"ol"},"Run/test the app")),(0,l.kt)("p",null,"This won't work all the time.  You can also develop without containers, and setup GitHub Actions to do the container builds, tests, and deploy K8s in a test namespace."))}u.isMDXComponent=!0}}]);