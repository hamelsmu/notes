"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[32],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1201:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},assets:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={title:"pandoc filters"},c=void 0,p={unversionedId:"pandoc/filters",id:"pandoc/filters",title:"pandoc filters",description:"Two python packages",source:"@site/docs/pandoc/filters.md",sourceDirName:"pandoc",slug:"/pandoc/filters",permalink:"/pandoc/filters",editUrl:"https://github.dev/hamelsmu/notes/blob/master/docs/pandoc/filters.md",tags:[],version:"current",frontMatter:{title:"pandoc filters"},sidebar:"tutorialSidebar",previous:{title:"Processes, Permissions and Moving Data",permalink:"/linux/permprocdata"},next:{title:"programming languages",permalink:"/programming-languages/pl"}},s={},u=[{value:"Minimal ipynb to md converstion with pandoc",id:"minimal-ipynb-to-md-converstion-with-pandoc",level:2},{value:"Minimal ipynb to md converstion with quarto",id:"minimal-ipynb-to-md-converstion-with-quarto",level:2},{value:"Running Pandoc With those Extensions",id:"running-pandoc-with-those-extensions",level:2}],m={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Two python packages"),(0,i.kt)("div",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://scorreia.com/software/panflute/"},"panflute")," - recommended"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jgm/pandocfilters"},"pandocfilters"))),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://pandoc.org/filters.html"},"tutorial")," on pandoc filters can help you get setup.  If rolling your own filters, you probably want to use the JSON filters and make use of the ",(0,i.kt)("inlineCode",{parentName:"p"},"-t native")," flag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pandoc -s -t native test.txt\n")),(0,i.kt)("h2",{id:"minimal-ipynb-to-md-converstion-with-pandoc"},"Minimal ipynb to md converstion with pandoc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'pandoc --to gfm minimal.ipynb\n<div class="cell markdown">\n\n## A minimal notebook\n\n</div>\n\n<div class="cell code" execution_count="1">\n\n``` python\n# Do some arithmetic\n1+1\n```\n\n<div class="output execute_result" execution_count="1">\n\n    2\n\n</div>\n\n</div>\n')),(0,i.kt)("h2",{id:"minimal-ipynb-to-md-converstion-with-quarto"},"Minimal ipynb to md converstion with quarto"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"quarto render minimal.ipynb --to gfm\npandoc\n  to: gfm+footnotes+tex_math_dollars-yaml_metadata_block\n  output-file: minimal.md\n  standalone: true\n  default-image-extension: png\n  filters:\n    - crossref\n\nOutput created: minimal.md\n")),(0,i.kt)("p",null,"This creates"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"## A minimal notebook\n\n``` python\n# Do some arithmetic\n1+1\n```\n\n    2\n")),(0,i.kt)("h2",{id:"running-pandoc-with-those-extensions"},"Running Pandoc With those Extensions"),(0,i.kt)("p",null,"running pandoc with ",(0,i.kt)("inlineCode",{parentName:"p"},"--standalone --to gfm+footnotes+tex_math_dollars-yaml_metadata_block")," creates the same result."))}d.isMDXComponent=!0}}]);